
路由定义

路由定义文件放在 子项目下。如  \apps\www\routes.php

示例 :

/* URL 路由规则 */
return [
    /* 静态路由 */
    'URL_MAP_RULES' => [
        'index' => 'default/index',
    ],
    /* 动态路由 */
    'routes' => [
        'info/:id\d' => 'info/show',
        'info/list/:id\d' => 'info/category',
        /* 短网址 */
        '/^t\/([a-zA-Z0-9_]+)$/' => 'dwz/index/?code=:1',
    ]
];


静态路由
静态路由其实属于规则路由的静态简化版（又称为URL映射），路由定义中不包含动态参数，静态路由不需要遍历路由规则而是直接定位，因此效率较高，但作用也有限。
'index' => 'default/index',
注意：为了不影响动态路由的遍历效率，静态路由采用URL_MAP_RULES定义和动态路由区分开来


规则路由
规则路由是一种比较容易理解的路由定义方式

静态地址和动态地址结合
'info/:id'   => 'info/show',

数字约束
 'info/:id\d' => 'info/show',

函数支持
'blog/:id\d|md5'=>'Blog/read',
表示对匹配到的id变量进行md5处理
注意：不支持对变量使用多次函数处理和函数额外参数传入。

可选定义
支持对路由参数的可选定义，例如：
'blog/:year\d/[:month\d]'=>'Blog/archive',
[:month\d]变量用[ ]包含起来后就表示该变量是路由匹配的可选变量。


正则路由
正则路由也就是采用正则表达式定义路由的一种方式，依靠强大的正则表达式，能够定义更灵活的路由规则。
'/^t\/([a-zA-Z0-9_]+)$/' => 'dwz/index/?code=:1',


